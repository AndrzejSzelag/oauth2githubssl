spring.application.name=OAuth 2.0 GitHub SSL

spring.security.oauth2.client.registration.github.client-id=Ov23liFl9YgaVncDnOVw
spring.security.oauth2.client.registration.github.client-secret=4d88ed1b8edd284e60b5ebd3b69d4d89695530d8
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github
spring.security.oauth2.client.registration.github.scope=read:user

logging.level.org.springframework.security=TRACE

# Upewnij się, że masz odpowiednią konfigurację serwera HTTPS:
# Twoja aplikacja Spring musi być uruchomiona na porcie HTTPS (np. 8443) i mieć odpowiednie certyfikaty SSL/TLS. 
# Jeśli używasz wbudowanego serwera Spring Boot (np. Tomcat), musisz skonfigurować go do obsługi HTTPS.
# Poniższa konfiguracja mówi Spring Boot, by uruchamiał aplikację na porcie 8443 i używał odpowiedniego keystore SSL
server.port=8443
server.ssl.key-store=classpath:keystore.jks
server.ssl.key-store-password=27aB.#cd75
server.ssl.keyStoreType=JKS
server.ssl.key-password=27aB.#cd75